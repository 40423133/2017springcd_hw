<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall 電腦輔助設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/hw.atom.xml" rel="self"></link><id>./</id><updated>2017-04-20T12:08:00+08:00</updated><entry><title>協同產品設計實習 ag1期中考報告</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-ag1qi-zhong-kao-bao-gao.html" rel="alternate"></link><published>2017-04-20T12:08:00+08:00</published><updated>2017-04-20T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-04-20:./xie-tong-chan-pin-she-ji-shi-xi-ag1qi-zhong-kao-bao-gao.html</id><summary type="html">&lt;p&gt;1.Fossil Server 實習查驗&lt;/p&gt;
&lt;p&gt;2.四連桿機構協同 Trace Point 查驗&lt;/p&gt;
&lt;p&gt;3.Fourbar Walker OnShape 零件協同繪圖與組立查驗&lt;/p&gt;
&lt;p&gt;4.分組協同零件展示&lt;/p&gt;


&lt;h2&gt;1.Fossil Server 實習查驗&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mde2a2.kmol.info/midterm/ag1/index"&gt;ag1期中考報告 fossil &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2.四連桿機構協同 Trace Point 查驗&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://40423105.github.io/test/blog/40423105si-lian-gan-ji-gou-xie-tong-trace-point-cha-yan.html"&gt;40423105四連桿機構協同 Trace Point 查驗&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3.Fourbar Walker OnShape 零件協同繪圖與組立查驗&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;利用SolveSpace畫Fourbar Walker製作影片&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3HtJVQ44-ZQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;利用SolveSpace畫Fourbar Walker&lt;/p&gt;
&lt;a href="http://imgur.com/22jm4Ci"&gt;&lt;img src="http://i.imgur.com/22jm4Ci.jpg" title="source: imgur.com" /&gt;&lt;/a&gt;
&lt;p&gt;利用onshape畫Fourbar Walker&lt;/p&gt;
&lt;p&gt;Fourbar Walker零件1&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/CvDzqLVMoYQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Fourbar Walker零件2&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/XgITUd5SvIU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Fourbar Walker零件3&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/XgITUd5SvIU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Fourbar Walker零件4&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/G4-aIqnULOE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Fourbar Walker零件5&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/jmFkzfUCLX0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Fourbar Walker零件組合&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/FHL1C2Fxfqc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Fourbar Walker動作動畫&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/NQl1ZNwCbzE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;4.分組協同零件展示&lt;/h2&gt;
&lt;p&gt;&lt;link href="./../work/madeleine/src/css/Madeleine.css" rel="stylesheet"&gt;
&lt;script src="./../work/madeleine/src/stats.js"&gt;&lt;/script&gt;
&lt;script src="./../work/madeleine/src/detector.js"&gt;&lt;/script&gt;
&lt;script src="./../work/madeleine/src/three.min.js"&gt;&lt;/script&gt;
&lt;script src="./../work/madeleine/src/Madeleine.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;div id="target" class="madeleine"&gt;&lt;/div&gt;

&lt;script&gt;
window.onload = function(){
    var madeleine = new Madeleine({
      target: 'target', // target div id
      data: './../data/Fourbar Walker.stl', // data path
      path: './../work/madeleine/src/' // path to source directory from current html file
    });
}; 
&lt;/script&gt;

&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r68/three.min.js"
&gt;&lt;/script&gt;

&lt;script src="https://rawgit.com/mrdoob/three.js/master/examples/js/controls/TrackballControls.js"
&gt;&lt;/script&gt;

&lt;script src="./../data/w9/loader.js"&gt;&lt;/script&gt;

&lt;script src="./../data/w9/stl.js"&gt;&lt;/script&gt;

&lt;div&gt;
select stl file: &lt;input type="file" id="file" /&gt; or drop stl file
&lt;/div&gt;

&lt;div id="view"&gt;&lt;/div&gt;</summary><category term="HW"></category></entry><entry><title>協同產品設計實習 第六週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-liu-zhou-zuo-ye.html" rel="alternate"></link><published>2017-04-13T12:08:00+08:00</published><updated>2017-04-13T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-04-13:./xie-tong-chan-pin-she-ji-shi-xi-di-liu-zhou-zuo-ye.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;利用onshape畫出四連桿&lt;/h1&gt;
&lt;p&gt;四連桿零件繪製&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Y_W9y0IxCpU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;四連桿零件組合&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/PiCEyWGN0b4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;八連桿零件1&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/YTDaNAd9530" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;八連桿零件2&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/y2bybwNR-dQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;八連桿組合&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/rOJ9jLB67pE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;v-rap組合&lt;/h1&gt;
&lt;p&gt;四連桿&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/fiHMFc7l2zM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;八連桿&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/zzxAJBVvLZg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="HW"></category></entry><entry><title>協同產品設計實習 第五週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-wu-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-24T12:08:00+08:00</published><updated>2017-03-24T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-03-24:./xie-tong-chan-pin-she-ji-shi-xi-di-wu-zhou-zuo-ye.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;1. 利用v-rep設定單連桿運動&lt;/h2&gt;
&lt;h1&gt;v-rep設定單連桿運動影片&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/QOqDAgrVeKk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;心得:一開始看老師做的單連桿運動,覺得很難,後來邊看影片邊做的時候,其實蠻簡單的.&lt;/h1&gt;</summary><category term="HW"></category></entry><entry><title>協同產品設計實習 第四週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-si-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-19T12:08:00+08:00</published><updated>2017-03-19T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-03-19:./xie-tong-chan-pin-she-ji-shi-xi-di-si-zhou-zuo-ye.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;第四週作業&lt;/h1&gt;
&lt;p&gt;&lt;P&gt; 1. 利用網誌與簡報說明安裝或使用 Hyperworks 套件過程與心得 - 課程結束前, 希望能夠使用 Hyperworks 進行連桿機構零件的應力分析與機構運動模擬.&lt;/P&gt;
&lt;P&gt;2. 平面四連桿機構的運動路徑方程式推導與網際 2D 繪圖, 方程式推導以 sympy 完成, 而 2D 繪圖則以 Brython 在各組網誌中完成. 先了解如何推導四連桿機構的運動方程式, 然後在各組網誌中完成靜態繪圖與動態模擬.&lt;/P&gt;
&lt;P&gt; 3. 為各班各組在 https://mde2a2.kmol.info 主機上建立 cdbg1(完成後可直接連結至 cdbg1 倉儲, 交由組長管理) ~ cdbg8, 以及 cdag1 ~ cdag8 等線上 Fossil SCM 倉儲, 用來管理各組協同產品設計實習過程中的純文件檔案 (例如?).&lt;/P&gt;&lt;/p&gt;
&lt;h2&gt;HYPERWORKS安裝心得&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;我覺得這個軟體看起來功能非常強大,但是,下載的步驟真的是非常的繁雜,同一個帳號不但沒辦法同時下載HYPERWORK及套件,每當安裝一個新套件我都要再重新輸入資訊,光是這點,就覺得非常的繁雜.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;FEKO下載安裝影片&lt;/h2&gt;
&lt;p&gt;待&lt;/p&gt;
&lt;h2&gt;四連桿機構的運動路徑方程式推導&lt;/h2&gt;
&lt;p&gt;&lt;h2&gt;PLLP 方程式推導&lt;/h2&gt;
&lt;p&gt;已知 Point a, Length ac, Length cb 與 Point b, 求 c 點座標.&lt;/p&gt;
&lt;pre class="brush: python"&gt;&lt;/p&gt;
&lt;h1&gt;PLLP&lt;/h1&gt;
&lt;p&gt;from sympy import symbols, sqrt, solve, cos, sin, Abs&lt;/p&gt;
&lt;h1&gt;inputs&lt;/h1&gt;
&lt;p&gt;ax, ay, bx, by, ac, cb = symbols('ax ay bx by ac cb')&lt;/p&gt;
&lt;h1&gt;intermediate variables&lt;/h1&gt;
&lt;p&gt;ab, dab, bac, degree= symbols('ab dab bac degree')
ad, bd = symbols('ad bd')&lt;/p&gt;
&lt;h1&gt;outputs&lt;/h1&gt;
&lt;p&gt;cx, cy = symbols('cx cy')&lt;/p&gt;
&lt;h1&gt;從 a, b 點座標求 ab&lt;/h1&gt;
&lt;p&gt;ab = sqrt((ax-bx)&lt;strong&gt;2+(ay-by)&lt;/strong&gt;2)&lt;/p&gt;
&lt;h1&gt;從三角形已知三邊長, 求解 cx, cy&lt;/h1&gt;
&lt;p&gt;data = solve([ac&lt;strong&gt;2-((ax-cx)&lt;/strong&gt;2+(ay-cy)&lt;strong&gt;2), cb&lt;/strong&gt;2-((cx-bx)&lt;strong&gt;2+(cy-by)&lt;/strong&gt;2)], [cx, cy])&lt;/p&gt;
&lt;h1&gt;第1組解&lt;/h1&gt;
&lt;p&gt;print("cx = ", data[0][0])
print("cy = ", data[0][1])&lt;/p&gt;
&lt;h1&gt;第2組解&lt;/h1&gt;
&lt;p&gt;print("cx = ", data[1][0])
print("cy = ", data[1][1])
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;數值分析驗證程式碼:&lt;/p&gt;

&lt;pre class="brush: python"&gt;
from math import pi, cos, sin, sqrt, acos

radian = 180/pi
degree = pi/180

#PLAP
def plap(ax, ay, ac, bac, bx, by, pos):
    if pos == 0:
        cx= ac*cos(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    else:
        cx= ac*cos(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    return cx, cy

#PLLP
def pllp(ax, ay, ac, cb, bx, by, pos):
    if pos == 0:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 - sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(-ax + bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    else:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    return cx, cy

ax = -60
ay = 0
bx = 0
by = 0
bac = 50*degree
ac = 30
cd = 50
db = 60
ce = 50
ed = 50
cx, cy = plap(ax, ay, ac, bac, bx, by, 0)
print("cx=", cx, "cy=", cy)
dx, dy = pllp(cx, cy, cd, db, bx, by, 0)
print("dx=", dx, "dy=", dy)
ex, ey = pllp(cx, cy, ce, ed, dx, dy, 0)
print("ex=", ex, "ey=", ey)
&lt;/pre&gt;

&lt;h2&gt;四連桿網際 2D 繪圖&lt;/h2&gt;
&lt;!-- 導入 Brython 標準程式庫 3.3.1 --&gt;

&lt;script type="text/javascript" src="./../data/brython_dist.js"&gt;
&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/Cango-8v05-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/Cango2D-7v04-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/CangoAnimation-4v01.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython 時, 設定 pythonpath 為 data/py --&gt;

&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下執行 Brython 程式 --&gt;

&lt;canvas id="plotarea2" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
from browser import window

cango = window.Cango2D.new
shapedefs = window.shapeDefs
obj2d = window.Obj2D.new
group2d = window.Group2D.new
cgo = cango("plotarea2")

x1, y1 = 20, 20
cx1, cy1 = 50, 70
x2, y2 = 110, 80
cx2, cy2 = 100, 80
cx3, cy3 = 120, 20
x3, y3 = 100, 60

def dragC1(mousePos):
    global cx1, cy1
    cx1 = mousePos.x
    cy1 = mousePos.y
    drawCurve()

def dragC2(mousePos):
    global cx2, cy2
    cx2 = mousePos.x
    cy2 = mousePos.y
    drawCurve()

def dragC3(mousePos):
    global cx3, cy3
    cx3 = mousePos.x
    cy3 = mousePos.y
    drawCurve()

def dragX1(mousePos):
    global x1, y1
    x1 = mousePos.x
    y1 = mousePos.y
    drawCurve()

def drawCurve():
    # curve change shape so it must be re-draw each time
    # draw a quadratic bezier from x1,y2 to x2,y2
    qbez = obj2d(['M', x1, y1, 'Q', cx1, cy1, x2, y2], "PATH",  {
          "strokeColor":'blue'})
    cbez = obj2d(['M', x2, y2, 'C', cx2, cy2, cx3, cy3, x3, y3], "PATH",  {
          "strokeColor":'green'})
    # show lines to control point
    '''
    L1 = obj2d(['M', x1, y1, 'L', cx1, cy1, x2, y2], "PATH", {
      "strokeColor":"rgba(0, 0, 0, 0.2)",
      "dashed":[4]})  # semi-transparent gray
    L2 = obj2d(['M', x2, y2, 'L', cx2, cy2], "PATH", {
      "strokeColor":"rgba(0, 0, 0, 0.2)",
      "dashed":[4]})
    L3 = obj2d(['M', x3, y3, 'L', cx3, cy3], "PATH", {
      "strokeColor":"rgba(0, 0, 0, 0.2)",
      "dashed":[4]})
    '''
    L1 = obj2d(['M', x1, y1, 'L', cx1, cy1], "PATH", {
      "strokeColor":"rgba(0, 0, 0, 0.2)",
      "solided":[10]})  # semi-transparent gray
    L2 = obj2d(['M', cx1, cy1, 'L', cx2, cy2], "PATH", {
      "strokeColor":"rgba(0, 0, 0, 0.2)",
      "solided":[10]})
    L3 = obj2d(['M', cx2, cy2, 'L', cx3, cy3], "PATH", {
      "strokeColor":"rgba(0, 0, 0, 0.2)",
      "solided":[10]})
    #c1.transform.reset()
    c1.transform.translate(cx1, cy1)
    #c2.transform.reset()
    c2.transform.translate(cx2, cy2)
    #c3.transform.reset()
    c3.transform.translate(cx3, cy3)
    #mx1.transform.reset()
    mx1.transform.translate(x1, y1)
    #grp = group2d(qbez, cbez, L1, L2, L3, c1, c2, c3)
    grp = group2d(L1, L2, L3, c1, c2, c3, mx1)
    cgo.clearCanvas()
    cgo.render(grp)

cgo.clearCanvas("lightyellow")
cgo.setWorldCoords(0, 0, 200)

# draggable control points
c1 = obj2d(shapedefs.circle(4), "SHAPE", {"fillColor":'red'})
c1.enableDrag(None, dragC1, None)
c2 = c1.dup()
c2.enableDrag(None, dragC2, None)
c3 = c1.dup()
c3.enableDrag(None, dragC3, None)
mx1 = c1.dup()
mx1.enableDrag(None, dragX1, None)
drawCurve();
&lt;/script&gt;

&lt;h2&gt;網際動態模擬&lt;/h2&gt;
&lt;!-- 導入 Brython 標準程式庫 3.3.1 --&gt;

&lt;script type="text/javascript" src="./../data/brython_dist.js"&gt;
&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/Cango-8v05-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/Cango2D-7v04-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/CangoAnimation-4v01.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython 時, 設定 pythonpath 為 data/py --&gt;

&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;canvas id='robot' width='800' height='400'&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
from browser import window

cango2d = window.Cango2D.new
shapedefs = window.shapeDefs
obj2d = window.Obj2D.new
tweener = window.Tweener.new

cgo = cango2d("robot")
# 清除畫面
cgo.clearCanvas("lightyellow")
cgo.setWorldCoords(-50, -50, 300)

# 加上基軸與第一桿
# 畫筆移到 -20, -10, 畫直線到 -10,-10 以及 -10,0 
standData = ['M', -20,-10, 'L', -10,-10, -10,0, 'A', 10,10,0,0,0,10,0, 'L',10,-10, 20,-10, 20,-40, -20,-40,'z']
stand = obj2d(standData, "SHAPE", {
        "fillColor":'darkgray',
        "border": True,
        "strokeColor": "#222222" })
axle0 = obj2d(shapedefs.circle(10), "SHAPE", {
        "fillColor":'gray',
        "border": True,
        "strokeColor": "#222222" })
armGrp = cgo.createGroup2D(stand, axle0)

segData = ['M',0,-8, 'A',8,8,0,0,0,0,8, 'L',50,8, 'A',8,8,0,0,0,50,-8, 'Z']
seg1 = obj2d(segData, "SHAPE", {
        "fillColor":'darkGray',
        "border": True,
        "strokeColor": "#222222",
        "zIndex": -1 })
# 利用 zIndex 決定疊層的先後次序
axle1 = obj2d(shapedefs.circle(8), "SHAPE", {
        "fillColor":'gray',
        "border": True,
        "strokeColor": "#222222",
        "zIndex": 1 })
axle1.translate(50, 0)
seg1Grp = cgo.createGroup2D(seg1, axle1)
armGrp.addObj(seg1Grp)

# 加上第二軸
seg2 = obj2d(segData, "SHAPE", {
        "fillColor":'darkGray',
        "border": True,
        "strokeColor": "#222222",
        "zIndex": -1 })
axle2 = obj2d(shapedefs.circle(8), "SHAPE", {
        "fillColor":'gray',
        "border": True,
        "strokeColor": "#222222",
        "zIndex": 1 })
axle2.translate(50, 0)
seg2Grp = cgo.createGroup2D(seg2, axle2)
cgo.render(seg2Grp)
# 請注意 seg2Grp 加上 seg1Grp 物件上
seg1Grp.addObj(seg2Grp)

seg3 = obj2d(segData, "SHAPE", {
        'fillColor':'darkGray',
        'border': True,
        'strokeColor': "#222222",
        'zIndex': -1 })
axle3 = obj2d(shapedefs.circle(6), "SHAPE", {
        'fillColor':'gray',
        'border': True,
        'strokeColor': "#222222",
        'zIndex': 1 })
axle3.translate(50, 0)
seg3Grp = cgo.createGroup2D(seg3, axle3)
seg2Grp.addObj(seg3Grp)

seg4Data = ['M',0,-6, 'A',6,6,0,0,0,0,6, 'L',40,6, 40,12, 50,12, 50,-12, 40,-12, 40,-6, 'Z']
seg4 = obj2d(seg4Data, "SHAPE", {
        'fillColor':'darkGray',
        'border': True,
        'strokeColor': "#222222",
        'zIndex': -1 })
seg3Grp.addObj(seg4)

# setup animation
animData = {'s1': [0, 80, 45, 0],
                  's2': [0, -60, -60, 0],
                  's3': [0, -90, 0, 90, 0],
                  's4': [0, 30, -90, 0]}

armTwnr = tweener(0, 3500, 'loop')

def initArm(opts):
    seg2Grp.transform.translate(50,0)
    seg3Grp.transform.translate(50,0)
    seg4.transform.translate(50,0)


def armPathFn(time, opts):
    seg1Rot = armTwnr.getVal(time, opts.s1)
    seg2Rot = armTwnr.getVal(time, opts.s2)
    seg3Rot = armTwnr.getVal(time, opts.s3)
    seg4Rot = armTwnr.getVal(time, opts.s4)

    seg1Grp.transform.rotate(seg1Rot)
    seg2Grp.transform.rotate(seg2Rot)
    seg2Grp.transform.translate(50,0)
    seg3Grp.transform.rotate(seg3Rot)
    seg3Grp.transform.translate(50,0)
    seg4.transform.rotate(seg4Rot)
    seg4.transform.translate(50,0)

cgo.animate(armGrp, initArm, armPathFn, animData)
cgo.playAnimation()
&lt;/script&gt;

&lt;h2&gt;線上 Fossil SCM 倉儲&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mde2a2.kmol.info/cdag1/home"&gt;cdag1&lt;/a&gt;
&lt;p&gt;線上倉儲可儲存三種不同格式的檔案&lt;/p&gt;
&lt;p&gt;第一種:Fossil Wiki&lt;/p&gt;
&lt;p&gt;Fossil 是一個分散式版本控制系統、缺陷跟蹤管理系統以及在軟體開發中使用的wiki軟體伺服器，它由D.理察·希普建立&lt;/p&gt;
&lt;p&gt;第二種:Markdown&lt;/p&gt;
&lt;p&gt;Markdown的目標是實現「易讀易寫」。&lt;/p&gt;
&lt;p&gt;不過最需要強調的便是它的可讀性。一份使用Markdown格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。Markdown語法受到一些既有text-to-HTML格式的影響，包括Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，然而最大靈感來源其實是純文字的電子郵件格式。&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;第三種:plain text(純文本)&lt;/p&gt;

&lt;p&gt;在計算中，純文本是僅表示可讀材料的字符但不表示其圖形表示的數據（例如文件內容），也不表示其他對象（圖像等）&lt;/p&gt;

&lt;section&gt;
&lt;h1&gt;4.單連桿製作及導入v-rep&lt;/h1&gt;
&lt;p&gt;零件1&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/k9SHoLYdphQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/script&gt;           
&lt;/section&gt;

&lt;section&gt;

&lt;p&gt;零件2&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Ygg3G3arZBY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/script&gt;           
&lt;/section&gt;

&lt;section&gt;

&lt;p&gt;零件3&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/nQmaWcprnNo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/script&gt;           
&lt;/section&gt;

&lt;section&gt;

&lt;p&gt;組裝&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ZD7ou-lPV7o" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/script&gt;           
&lt;/section&gt;

&lt;section&gt;

&lt;p&gt;導入v-rep&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/r458TU7LPYQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/script&gt;           
&lt;/section&gt;</summary><category term="HW"></category></entry><entry><title>協同產品設計實習 第三周作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-san-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-16T12:08:00+08:00</published><updated>2017-03-16T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-03-16:./xie-tong-chan-pin-she-ji-shi-xi-di-san-zhou-zuo-ye.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;翻譯影片&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/WGAmkWxPiig" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;建立fossil倉儲&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/SIDksgUfU1A" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="HW"></category></entry><entry><title>協同產品設計實習 第二周作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-er-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-09T12:08:00+08:00</published><updated>2017-03-09T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-03-09:./xie-tong-chan-pin-she-ji-shi-xi-di-er-zhou-zuo-ye.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;四連桿組裝&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/qXY_ps3rkf0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;修改stunnel的IP設定&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/bmtCXfh3CGE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="HW"></category></entry><entry><title>協同產品設計實習 第一周作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-yi-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-02T12:08:00+08:00</published><updated>2017-03-02T12:08:00+08:00</updated><author><name>40423133</name></author><id>tag:,2017-03-02:./xie-tong-chan-pin-she-ji-shi-xi-di-yi-zhou-zuo-ye.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h1&gt;四連桿架構&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/nDjOU0PLdk4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;四連桿零件&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/9JgVyc63HNQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="HW"></category></entry></feed>